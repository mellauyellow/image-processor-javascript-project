{"version":3,"sources":["webpack:///webpack/bootstrap 1333b3a891367e92526e","webpack:///./lib/tableau.js","webpack:///./lib/image.js","webpack:///./lib/filter.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;AACA;AACA,EAAC;;;;;;;ACLD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,qCAAoC,sEAAsE;AAC1G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,2DAA2D;AAClG;AACA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACzXA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD,sBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,iCAAgC,mBAAmB;AACnD,mCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD,sBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,8BAA8B;AACjD,sBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD,sBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAoD,oEAAoE;AACxH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAoD,mEAAmE;AACvH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1333b3a891367e92526e","const Image = require('./image');\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  Image.createDropbox();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tableau.js\n// module id = 0\n// module chunks = 0","const Filter = require('./filter');\n\nconst matrices = {\n  \"Sharpen\" : [[0, -1, 0, -1, 5, -1, 0, -1, 0], 1],\n  \"Gaussian Blur\" : [[1, 2, 1, 2, 4, 2, 1, 2, 1], 1/16],\n  \"Edge Detection\" : [[-1, -1, -1, -1, 8, -1, -1, -1, -1], 1],\n  \"Edge Sharpen\" : [[1, 1, 1, 1, -7, 1, 1, 1, 1], 1],\n  \"Motion Blur\" : [[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 1/5],\n  \"Emboss\" : [[-1, -1, 0, -1, 0, 1, 0, 1, 1], 1],\n  \"Unsharp\" : [[1, 4, 6, 4, 1, 4, 16, 24, 16, 4, 6, 24, -476, 24, 6, 4, 16, 24, 16, 4, 1, 4, 6, 4, 1], -1/256]\n};\n\nclass Image {\n  constructor(image) {\n    this.origImage = document.createElement(\"img\");\n    this.origImage.file = image;\n    this.canvasEl = null;\n    this.filterOrder = [];\n    this.imageCache = [];\n    this.cacheIdx = 0;\n    this.filterIdx = 0;\n    this.fullImgCanvas = null;\n    this.clearScreen = this.clearScreen.bind(this);\n  }\n\n  static createDropbox() {\n    let dropbox = document.getElementById('dropbox');\n\n    let $fileInput = $('#file-chooser');\n\n    $fileInput.change(function() {\n      Image.handleFile(this.files[0]);\n    });\n\n    const dragenter = (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const dragover = (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const drop = (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      let dataTransfer = e.dataTransfer;\n      let files = dataTransfer.files;\n\n      Image.handleFile(files[0]);\n    };\n\n    dropbox.addEventListener(\"dragenter\", dragenter, false);\n    dropbox.addEventListener(\"dragover\", dragover, false);\n    dropbox.addEventListener(\"drop\", drop, false);\n\n    $('.preset-images > img').click((e) => {\n      let imageObject = new Image();\n      imageObject.origImage.src = e.target.src;\n      imageObject.createCanvasEl();\n    });\n  }\n\n  static handleFile(file) {\n    let imageObject = new Image(file);\n\n    let reader = new FileReader();\n\n    reader.onload = (e) => {\n      imageObject.origImage.src = e.target.result;\n\n      imageObject.createCanvasEl();\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  createCanvasEl() {\n    let $canvasDiv = $('.dynamic-canvas');\n\n    let imgDimensions = this.imageResize(0.7);\n\n    let $ctx = $('<canvas/>').attr({width: imgDimensions[0], height: imgDimensions[1], id: 'image-canvas'});\n    let c = $ctx[0].getContext('2d');\n    c.drawImage(this.origImage, 0, 0, ...imgDimensions);\n\n    this.canvasEl = $ctx[0];\n    this.imageCache.push(c.getImageData(0, 0, this.canvasEl.width, this.canvasEl.height));\n    this.filterOrder.push(null);\n    $('#dropbox').toggle();\n    $canvasDiv.append($ctx);\n    this.buildFilterElements();\n    this.buildUtilityElements();\n  }\n\n  imageResize(percentage) {\n    let wWidth = window.innerWidth;\n    let wHeight = window.innerHeight;\n    let maxHeight = wHeight * percentage;\n    let maxWidth = wWidth * percentage;\n    let maxImgWidth = maxWidth;\n    let maxImgHeight = maxImgWidth * (this.origImage.height / this.origImage.width);\n\n    if (maxImgHeight > maxHeight) {\n      maxImgHeight = maxHeight;\n      maxImgWidth = maxImgHeight * (this.origImage.width / this.origImage.height);\n    }\n\n    if (maxImgWidth > this.origImage.width || maxImgHeight > this.origImage.height) {\n      return [this.origImage.width, this.origImage.height];\n    }\n\n    return [maxImgWidth, maxImgHeight];\n  }\n\n  buildFilterElements() {\n    let $filterDiv = $('.filter-buttons');\n\n    let $header = $('<h5/>').html(\"Filters:\");\n\n    let sharpen = \"Sharpen\";\n    let $sharpenDiv = $('<div/>').attr('class', 'sharpen');\n    let $sharpenLabel = $('<h6/>').html(sharpen);\n    let $sharpenIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275242/eye_y11iyk.png');\n    $sharpenDiv.append($sharpenIcon, $sharpenLabel);\n    $sharpenDiv.click(this.applyFilter(this.canvasEl, matrices[sharpen][0], matrices[sharpen][1]));\n\n    let gaussian = \"Gaussian Blur\";\n    let $gaussianDiv = $('<div/>').attr('class', 'gaussian');\n    let $gaussianLabel = $('<h6/>').html(gaussian);\n    let $gaussianIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275242/eye-1_ujhtbw.png');\n    $gaussianDiv.append($gaussianIcon, $gaussianLabel);\n    $gaussianDiv.click(this.applyFilter(this.canvasEl, matrices[gaussian][0], matrices[gaussian][1]));\n\n    let edgeDet = \"Edge Detection\";\n    let $edgeDetDiv = $('<div/>').attr('class', 'edge-detection');\n    let $edgeDetLabel = $('<h6/>').html(edgeDet);\n    let $edgeDetIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275304/pantone_jxpyuc.png');\n    $edgeDetDiv.append($edgeDetIcon, $edgeDetLabel);\n    $edgeDetDiv.click(this.applyFilter(this.canvasEl, matrices[edgeDet][0], matrices[edgeDet][1]));\n\n    let edgeSharp = \"Edge Sharpen\";\n    let $edgeSharpDiv = $('<div/>').attr('class', 'edge-sharp');\n    let $edgeSharpLabel = $('<h6/>').html(edgeSharp);\n    let $edgeSharpIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275073/cutter_l9hoqz.png');\n    $edgeSharpDiv.append($edgeSharpIcon, $edgeSharpLabel);\n    $edgeSharpDiv.click(this.applyFilter(this.canvasEl, matrices[edgeSharp][0], matrices[edgeSharp][1]));\n\n    let motion = \"Motion Blur\";\n    let $motionDiv = $('<div/>').attr('class', 'motion');\n    let $motionLabel = $('<h6/>').html(motion);\n    let $motionIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482273597/blur_prgwoa.png');\n    $motionDiv.append($motionIcon, $motionLabel);\n    $motionDiv.click(this.applyFilter(this.canvasEl, matrices[motion][0], matrices[motion][1]));\n\n    let emboss = \"Emboss\";\n    let $embossDiv = $('<div/>').attr('class', 'emboss');\n    let $embossLabel = $('<h6/>').html(emboss);\n    let $embossIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275641/stamp_l6fycv.png');\n    $embossDiv.append($embossIcon, $embossLabel);\n    $embossDiv.click(this.applyFilter(this.canvasEl, matrices[emboss][0], matrices[emboss][1]));\n\n    let unsharp = \"Unsharp\";\n    let $unsharpDiv = $('<div/>').attr('class', 'unsharp');\n    let $unsharpLabel = $('<h6/>').html(unsharp);\n    let $unsharpIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275772/art_jftnnb.png');\n    $unsharpDiv.append($unsharpIcon, $unsharpLabel);\n    $unsharpDiv.click(this.applyFilter(this.canvasEl, matrices[unsharp][0], matrices[unsharp][1]));\n\n    let unsharpMask = \"Unsharp Mask\";\n    let $unsharpMaskDiv = $('<div/>').attr('class', 'unsharp-mask');\n    let $unsharpMaskLabel = $('<h6/>').html(unsharpMask);\n    let $unsharpMaskIcon = $('<img/>').attr('src', 'https://res.cloudinary.com/mellauyellow/image/upload/c_scale,q_auto:best,w_25/v1482275255/layers_lbzey0.png');\n    $unsharpMaskDiv.append($unsharpMaskIcon, $unsharpMaskLabel);\n    $unsharpMaskDiv.click(this.applyFilter(this.canvasEl));\n\n    $filterDiv.append($sharpenDiv, $gaussianDiv, $edgeDetDiv, $edgeSharpDiv, $motionDiv, $embossDiv, $unsharpDiv, $unsharpMaskDiv);\n  }\n\n  applyFilter(canvas, matrix, weight) {\n    return (e) => {\n      $(\"button\").prop('disabled', true);\n      $(\".spinner-filters\").css('visibility','visible');\n\n      e.preventDefault();\n\n      setTimeout(() => {\n        let filterObject = new Filter(canvas, matrix, weight);\n        let filterData;\n\n        if (matrix) {\n          filterData = filterObject.updateImageData();\n        } else {\n          filterData = filterObject.unsharpMask(80);\n        }\n\n        let ctx = canvas.getContext('2d');\n        ctx.putImageData(filterData, 0, 0);\n        this.updateOrder(filterData, filterObject);\n        $(\"button\").prop('disabled', false);\n        $(\".spinner-filters\").css('visibility','hidden');\n\n      }, 1000);\n    };\n  }\n\n  buildUtilityElements() {\n    let $utilityDiv = $('.utility-buttons');\n\n    let $downloadDiv = $('<div/>').attr('class', 'download');\n    let $downloadLabel = $('<h6/>').html(\"Download\");\n    let $downloadIcon = $('<i/>').attr('class', 'flaticon-download-1');\n    $downloadDiv.append($downloadIcon, $downloadLabel);\n\n    $downloadDiv.click(() => {\n      $('.download-processing').css('visibility', 'visible');\n\n      setTimeout(() => {\n        this.buildFullImgCanvas();\n        this.downloadImage('canvas.jpg');\n      }, 1000);\n    });\n\n    let $undoDiv = $('<div/>').attr('class', 'undo');\n    let $undoLabel = $('<h6/>').html(\"Undo\");\n    let $undoIcon = $('<i/>').attr('class', 'flaticon-undo');\n    $undoDiv.append($undoIcon, $undoLabel);\n    $undoDiv.click(() => {\n      this.undoOperation();\n    });\n\n    let $redoDiv = $('<div/>').attr('class', 'redo');\n    let $redoLabel = $('<h6/>').html(\"Redo\");\n    let $redoIcon = $('<i/>').attr('class', 'flaticon-redo');\n    $redoDiv.append($redoIcon, $redoLabel);\n    $redoDiv.click(() => {\n      this.redoOperation();\n    });\n\n    let $restartDiv = $('<div/>').attr('class', 'restart');\n    let $restartLabel = $('<h6/>').html(\"Start Over\");\n    let $restartIcon = $('<i/>').attr('class', 'flaticon-power-button');\n    $restartDiv.append($restartIcon, $restartLabel);\n    $restartDiv.click(this.handleStartOver.bind(this));\n\n    $utilityDiv.append($downloadDiv, $undoDiv, $redoDiv, $restartDiv);\n  }\n\n  downloadImage(filename) {\n    let canvas = this.fullImgCanvas;\n\n    canvas.toBlob((blob) => {\n      let saveLink = document.createElement('a');\n      saveLink.href = URL.createObjectURL(blob);\n      saveLink.download = filename;\n      var clickEvent = new MouseEvent(\"click\", {\n          \"view\": window,\n          \"bubbles\": true,\n          \"cancelable\": false\n      });\n\n      $('.download-processing').css('visibility', 'hidden');\n      saveLink.dispatchEvent(clickEvent);\n      this.handleStartOver();\n    }, \"image/jpeg\", 1.0);\n  }\n\n  handleStartOver() {\n    $('.new-image-button').unbind('click', this.newStart);\n    $('.new-image-button').bind('click', this.newStart);\n\n    $('.same-image-button').unbind('click', this.sameStart(this));\n    $('.same-image-button').bind('click', this.sameStart(this));\n\n    $('.cancel').unbind('click', this.clearStartOver);\n    $('.cancel').bind('click', this.clearStartOver);\n\n    $('.start-over').css('visibility', 'visible');\n  }\n\n  clearStartOver() {\n    $('.start-over').css('visibility', 'hidden');\n  }\n\n  newStart() {\n    $('.download-processing').css('visibility', 'hidden');\n    $('.start-over').css('visibility', 'hidden');\n    $('#image-canvas').remove();\n    $('.filter-buttons').empty();\n    $('.utility-buttons').empty();\n    $('#dropbox').toggle();\n  }\n\n  sameStart(scope) {\n    return () => {\n      scope.newStart();\n\n      this.filterOrder = [];\n      this.imageCache = [];\n      this.cacheIdx = 0;\n      this.filterIdx = 0;\n\n      scope.createCanvasEl();\n    };\n  }\n\n  clearScreen() {\n    $('.download-processing').css('visibility', 'hidden');\n    $('.start-over').css('visibility', 'hidden');\n    $('#image-canvas').remove();\n    $('.filter-buttons').empty();\n    $('.utility-buttons').empty();\n  }\n\n  undoOperation() {\n    let ctx = this.canvasEl.getContext('2d');\n\n    if (this.cacheIdx > 0) {\n      ctx.putImageData(this.imageCache[this.cacheIdx - 1], 0, 0);\n      this.cacheIdx -= 1;\n      this.filterIdx -= 1;\n    }\n  }\n\n  redoOperation() {\n    let ctx = this.canvasEl.getContext('2d');\n\n    if (this.cacheIdx < this.imageCache.length - 1) {\n      ctx.putImageData(this.imageCache[this.cacheIdx + 1], 0, 0);\n      this.cacheIdx += 1;\n      this.filterIdx += 1;\n    }\n  }\n\n  updateOrder(imageData, filterObject) {\n    let newCache = this.imageCache.slice(0, this.cacheIdx + 1);\n    newCache.push(imageData);\n    this.cacheIdx += 1;\n    this.imageCache = newCache;\n\n    if (this.imageCache.length > 4) {\n      this.imageCache.shift();\n      this.cacheIdx -= 1;\n    }\n\n    let newFilterOrder = this.filterOrder.slice(0, this.filterIdx + 1);\n    newFilterOrder.push(filterObject);\n    this.filterOrder = newFilterOrder;\n    this.filterIdx += 1;\n  }\n\n  buildFullImgCanvas() {\n    let $canvas = $('<canvas/>').attr({width: this.origImage.width, height: this.origImage.height});\n    this.fullImgCanvas = $canvas[0];\n    let ctx = this.fullImgCanvas.getContext('2d');\n    ctx.drawImage(this.origImage, 0, 0);\n\n    for (var i = 0; i <= this.filterIdx; i++) {\n      if (i === 0) continue;\n\n      let filter = this.filterOrder[i];\n      filter.currentCanvas = this.fullImgCanvas;\n\n      let filterData;\n\n      if (filter.filterMatrix) {\n        filterData = filter.updateImageData();\n      } else {\n        filterData = filter.unsharpMask(80);\n      }\n\n      ctx.putImageData(filterData, 0, 0);\n    }\n  }\n}\n\nmodule.exports = Image;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/image.js\n// module id = 1\n// module chunks = 0","class Filter {\n  constructor(currentCanvas, filterMatrix, weight) {\n    this.currentCanvas = currentCanvas;\n    this.filterMatrix = filterMatrix;\n    this.weight = weight;\n  }\n\n  updateImageData() {\n    let ctx = this.currentCanvas.getContext('2d');\n    let imageData = ctx.getImageData(0, 0, this.currentCanvas.width, this.currentCanvas.height);\n    let data = imageData.data;\n    let dupeData = data.slice();\n\n    for (var x = 0; x < this.currentCanvas.width; x++) {\n      for (var y = 0; y < this.currentCanvas.height; y++) {\n        let matrix = this.calculateMatrix(x, y, dupeData);\n\n        let newRGB = this.filteredPixelRGB(matrix, this.filterMatrix);\n        this.writePixel(data, newRGB, x, y);\n      }\n    }\n\n    return imageData;\n  }\n\n  calculateMatrix(x, y, data) {\n    let matrix = [];\n\n    let offset = Math.floor(Math.sqrt(this.filterMatrix.length) / 2);\n\n    for (var yOff = -1 * offset; yOff < offset + 1; yOff++) {\n      for (var xOff = -1 * offset; xOff < offset + 1; xOff++) {\n        let coords = this.pixelOnGridValue(x + xOff, y + yOff);\n        matrix.push(this.readPixel(data, ...coords));\n      }\n    }\n\n    return matrix;\n  }\n\n  filteredPixelRGB(pixelMatrix, filterMatrix) {\n    let rgb = [];\n    for (var i = 0; i < 3; i++) {\n      let sum = 0;\n      pixelMatrix.forEach((pixel, idx) => (sum += pixel[i] * filterMatrix[idx]));\n      let newValue = sum * this.weight;\n\n      if (newValue < 0) {\n        newValue = 0;\n      } else if (newValue > 255) {\n        newValue = 255;\n      }\n\n      rgb.push(newValue);\n    }\n\n    return rgb;\n  }\n\n  unsharpMask(n) {\n    let ctx = this.currentCanvas.getContext('2d');\n    let imageData = ctx.getImageData(0, 0, this.currentCanvas.width, this.currentCanvas.height);\n    let data = imageData.data;\n    let origData = data.slice();\n    let dupeData = data.slice();\n\n    for (var x = 0; x < this.currentCanvas.width; x++) {\n      for (var y = 0; y < this.currentCanvas.height; y++) {\n        let neighbors = this.getVertNeighbors(dupeData, n, x, y);\n        let sum = neighbors.reduce((rgb, accum) => {\n          return [rgb[0] + accum[0], rgb[1] + accum[1], rgb[2] + accum[2]];\n        });\n        let averages = sum.map((value) => (Math.floor(value / neighbors.length)));\n        this.writePixel(data, averages, x, y);\n      }\n    }\n\n    dupeData = data.slice();\n    for (var x = 0; x < this.currentCanvas.width; x++) {\n      for (var y = 0; y < this.currentCanvas.height; y++) {\n        let neighbors = this.getHorNeighbors(dupeData, n, x, y);\n        let sum = neighbors.reduce((rgb, accum) => {\n          return [rgb[0] + accum[0], rgb[1] + accum[1], rgb[2] + accum[2]];\n        });\n        let averages = sum.map((value) => (Math.floor(value / neighbors.length)));\n        this.writePixel(data, averages, x, y);\n      }\n    }\n\n    for (var x = 0; x < this.currentCanvas.width; x++) {\n      for (var y = 0; y < this.currentCanvas.height; y++) {\n        let blurredRgb = this.readPixel(data, x, y);\n        let origRgb = this.readPixel(origData, x, y);\n        let newRgb = origRgb.map((val, idx) => val + (val - blurredRgb[idx]) * 0.3);\n        this.writePixel(data, newRgb, x, y);\n      }\n    }\n\n    return imageData;\n  }\n\n  getVertNeighbors(data, n, x, y) {\n    let neighbors = [];\n    for (var i = Math.max(y - Math.floor(n / 2), 0); i < Math.min(y + Math.floor(n / 2), this.currentCanvas.height - 1); i++) {\n      neighbors.push(this.readPixel(data, x, i));\n    }\n\n    return neighbors;\n  }\n\n  getHorNeighbors(data, n, x, y) {\n    let neighbors = [];\n    for (var i = Math.max(x - Math.floor(n / 2), 0); i < Math.min(x + Math.floor(n / 2), this.currentCanvas.width - 1); i++) {\n      neighbors.push(this.readPixel(data, i, y));\n    }\n\n    return neighbors;\n  }\n\n  readPixel(imageData, x, y) {\n    let i = (y * this.currentCanvas.width + x) * 4;\n    return [imageData[i], imageData[i + 1], imageData[i + 2]];\n  }\n\n  writePixel(imageData, pixelValues, x, y) {\n    let [r, g, b] = pixelValues;\n    let i = (y * this.currentCanvas.width + x) * 4;\n\n    imageData[i] = r;\n    imageData[i + 1] = g;\n    imageData[i + 2] = b;\n  }\n\n  pixelOffGrid(x, y) {\n    return (x < 0) || (x >= this.currentCanvas.width) || (y < 0) || (y >= this.currentCanvas.height);\n  }\n\n  pixelOnGridValue(x, y) {\n    if (x < 0) {\n      x = 0;\n    } else if (x >= this.currentCanvas.width) {\n      x = this.currentCanvas.width - 1;\n    }\n\n    if (y < 0) {\n      y = 0;\n    } else if (y >= this.currentCanvas.height) {\n      y = this.currentCanvas.height - 1;\n    }\n\n    return [x, y];\n  }\n}\n\nmodule.exports = Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/filter.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}